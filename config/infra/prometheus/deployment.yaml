apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: prometheus-server
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.12.0
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
            - "--web.enable-lifecycle"
          resources:
            limits:
              cpu: "600m"
              memory: "600Mi"
            requests:
              cpu: "300m"
              memory: "300Mi"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume
              mountPath: /prometheus/
      securityContext:
        runAsUser: 1000
        runAsNonRoot: true
        fsGroup: 2000
      initContainers:
        - name: change-volume-permissions
          image: busybox:1.31.1
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: ["/bin/chown", "-R", "1000:2000", "/prometheus/"]
          volumeMounts:
            - mountPath: /prometheus/
              name: prometheus-storage-volume
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: prometheus-server-conf
        - name: prometheus-storage-volume
          persistentVolumeClaim:
            claimName: prometheus-volume-claim
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: prometheus-config-reloader
  namespace: monitoring
spec:
  schedule: "0 0/30 * 1/1 * ? *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: updater
              image: busybox:1.31.1
              args:
                - /bin/sh
                - -c
                - curl -X POST http://prometheus-service.monitoring.svc:8080/-/reload
          restartPolicy: OnFailure
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: monitoring
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/should_be_probed: "true"
spec:
  selector:
    app: prometheus-server
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 9090
