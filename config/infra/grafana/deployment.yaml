apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      name: grafana
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - name: grafana
              containerPort: 3000
          resources:
            limits:
              memory: "2Gi"
              cpu: "1000m"
            requests:
              memory: "1Gi"
              cpu: "500m"
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-storage
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-datasources
              readOnly: false
      initContainers:
        - name: change-volume-permissions
          image: busybox:1.31.1
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: ["/bin/chown", "-R", "472", "/var/lib/grafana"]
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-storage
      securityContext:
        runAsUser: 472
        runAsNonRoot: true
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-volume-claim
        - name: grafana-datasources
          configMap:
            defaultMode: 420
            name: grafana-datasources
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: monitoring
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
spec:
  selector:
    app: grafana
  type: NodePort
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 32000
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: grafana-ingress
spec:
  rules:
    - host: grafana.kohea.tel
      http:
        paths:
          - path: /
            backend:
              serviceName: grafana-service
              servicePort: 3000
