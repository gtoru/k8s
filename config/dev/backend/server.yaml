apiVersion: apps/v1
kind: Deployment
metadata:
  name: gto-back-deployment
  annotations:
    prometheus.io/should_be_probed: "true"
spec:
  selector:
    matchLabels:
      app: gto
      tier: backend
  replicas: 2
  template:
    metadata:
      labels:
        app: gto
        tier: backend
    spec:
      containers:
        - name: gto-back-container
          image: docker.pkg.github.com/gtoru/server/server
          env:
            - name: DB__Host
              value: gto-db-svc
            - name: DB__Port
              value: "5432"
          ports:
            - name: metrics-server
              containerPort: 8080
          imagePullPolicy: Always
          resources:
            limits:
              cpu: "250m"
              memory: "500Mi"
            requests:
              cpu: "25m"
              memory: "50Mi"
          livenessProbe:
            httpGet:
              path: /_status/alive
              port: 8080
            initialDelaySeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /_status/ready
              port: 8080
            initialDelaySeconds: 3
            timeoutSeconds: 5
        - name: gto-back-balancer
          image: nginx:1.17.9-alpine
          resources:
            limits:
              cpu: "100m"
              memory: "100Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /etc/nginx
              name: gto-load-balance-config
            - mountPath: /var/log/nginx
              name: log
        - name: gto-nginx-scrapper
          image: quay.io/martinhelmich/prometheus-nginxlog-exporter:v1.4.1
          args:
            ["-config-file", "/etc/scrapper/prometheus-nginxlog-exporter.hcl"]
          resources:
            limits:
              cpu: "10m"
              memory: "10Mi"
          ports:
            - name: metrics-nginx
              containerPort: 4040
          volumeMounts:
            - name: log
              mountPath: /var/log/nginx
            - name: gto-nginx-scrapper-config
              mountPath: /etc/scrapper
      volumes:
        - name: gto-load-balance-config
          configMap:
            name: gto-load-balance-config
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: log
          emptyDir: {}
        - name: gto-nginx-scrapper-config
          configMap:
            name: gto-nginx-scrapper-config
            items:
              - key: prometheus-nginxlog-exporter.hcl
                path: prometheus-nginxlog-exporter.hcl
      imagePullSecrets:
        - name: gto-regcred
---
apiVersion: v1
kind: Service
metadata:
  name: gto-back-svc
  namespace: gto-dev
spec:
  selector:
    app: gto
    tier: backend
  ports:
    - name: backend
      port: 80
      targetPort: 80
